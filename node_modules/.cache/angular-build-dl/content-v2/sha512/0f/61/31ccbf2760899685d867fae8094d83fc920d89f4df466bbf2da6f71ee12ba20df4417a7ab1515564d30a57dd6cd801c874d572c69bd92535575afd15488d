{"version":3,"sources":["webpack:///src/app/Services/actualizarpuntos.service.ts","webpack:///src/app/Services/recompensas.service.ts","webpack:///src/app/recompensas/recompensas-routing.module.ts","webpack:///src/app/recompensas/recompensas.module.ts","webpack:///src/app/recompensas/recompensas.page.ts","webpack:///src/app/recompensas/recompensas.page.scss","webpack:///src/app/recompensas/recompensas.page.html"],"names":["ActualizarpuntosService","http","cod_puntos","puntos_acumulado","cod_usuario","get","HttpClient","Injectable","providedIn","RecompensasService","routes","path","component","RecompensasPage","RecompensasPageRoutingModule","NgModule","imports","RouterModule","exports","RecompensasPageModule","CommonModule","FormsModule","IonicModule","declarations","servicio","servicioPuntos","servicioActualizarPuntos","registroRecibo","alertController","router","Variableglobal","obtenerrecompensas","subscribe","data","recompensas","error","console","log","obtenerMisPuntos","misPuntos","ActualizarPuntos","puntosAcumulados","create","cssClass","message","buttons","alert","present","header","i","document","getElementById","textContent","precioArticulo","articuloSeleccionado","checked","botonId","id","ultimoCaracterBoton","charAt","length","puntosInt","parseInt","precioInt","cod_recompensas","confirm","resultado","cod_usuarios","puntos_acumulados","datos","respuesta","IngresarRecibo","innerHTML","MispuntosService","RegistroReciboService","AlertController","Router","Component","selector","template"],"mappings":"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","file":"src_app_recompensas_recompensas_module_ts-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActualizarpuntosService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  ActualizarPuntos(cod_puntos:any,puntos_acumulado:any,cod_usuario:any)\r\n  {\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ActualizarOrden?cod_puntos=\"+cod_puntos+\"&puntosacumulados=\"+puntos_acumulado+\"&cod_usuario=\"+cod_usuario+\"\");\r\n  }\r\n\r\n  // return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/ActualizarOrden/\"+cod_puntos+\"/\"+puntos_acumulado+\"/\"+cod_usuario+\"\");\r\n    \r\n  // }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecompensasService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  obtenerrecompensas(){\r\n    return this.http.get('http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ConsultarListadodeRecompensas');\r\n  }\r\n\r\n//   return this.http.get('https://localhost:44371/api/MisCallesLimpiasRD/ConsultarListadodeRecompensas');\r\n// }\r\n\r\n\r\n  obtenerMisPuntos(cod_usuario: any){\r\n    return this.http.get('http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ConsultarInfMisPuntos?cod_usuario=' + cod_usuario);\r\n  }\r\n\r\n//   return this.http.get('https://localhost:44371/api/MisCallesLimpiasRD/ConsultarInfMisPuntos/' + cod_usuario);\r\n// }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RecompensasPage } from './recompensas.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecompensasPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RecompensasPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RecompensasPageRoutingModule } from './recompensas-routing.module';\r\n\r\nimport { RecompensasPage } from './recompensas.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RecompensasPageRoutingModule\r\n  ],\r\n  declarations: [RecompensasPage]\r\n})\r\nexport class RecompensasPageModule {}\r\n","import { RecompensasService } from '../Services/recompensas.service';\r\nimport {ActualizarpuntosService} from '../Services/actualizarpuntos.service'\r\nimport { Component, OnInit,  ViewChild, ElementRef } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { interval, Subscription } from 'rxjs';\r\nimport {RegistroReciboService} from '../Services/registrorecibo.service';\r\nimport { MispuntosService } from '../Services/mispuntos.service';\r\nimport { Variableglobal } from '../variableglobal';\r\nimport { Router } from \"@angular/router\"; \r\n\r\n\r\n@Component({\r\n  selector: 'app-recompensas',\r\n  templateUrl: './recompensas.page.html',\r\n  styleUrls: ['./recompensas.page.scss'],\r\n})\r\nexport class RecompensasPage implements OnInit {\r\n  cod_usuario:any;\r\n  public datos:any;\r\n  subscription: Subscription;\r\n\r\n\r\n  constructor(\r\n    public servicio:RecompensasService, \r\n    public servicioPuntos: MispuntosService,\r\n    public servicioActualizarPuntos:ActualizarpuntosService,\r\n    public registroRecibo: RegistroReciboService,\r\n    public alertController: AlertController,\r\n    private router:Router\r\n    ) { \r\n      this.cod_usuario = Variableglobal.cod_usuario;\r\n\r\n    }\r\n  \r\n  recompensas:any;\r\n  misPuntos:any;\r\n  \r\n  ngOnInit() {\r\n    this.cod_usuario = Variableglobal.cod_usuario;\r\n    this.servicio.obtenerrecompensas()\r\n    .subscribe(\r\n      (data)=>{this.recompensas = data;},\r\n      (error)=>{console.log(error);}\r\n    )\r\n\r\n   \r\n      //Esta variable llamada this.cod_usuario almacena el ID del usuario. \r\n      //Obtenemos los puntos del usuario logeado corrientemente\r\n      this.cod_usuario = Variableglobal.cod_usuario;    \r\n      this.servicioPuntos.obtenerMisPuntos(this.cod_usuario)\r\n      .subscribe(\r\n        (data)=>{this.misPuntos = data;},\r\n        (error)=>{console.log(error);}\r\n      )\r\n\r\n      //Llamamos al procedimiento para actualizar los puntos\r\n    this.servicioActualizarPuntos.ActualizarPuntos(this.cod_puntos, this.cod_usuario, this.puntosAcumulados)\r\n    .subscribe(\r\n      (data)=>{this.recompensas = data;}, \r\n      (error)=>{console.log(error);}\r\n    )   \r\n    \r\n\r\n    \r\n  }\r\n\r\n  async SuccesAlert() {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      // header: 'Error',\r\n      message: 'Usuario Registrado con Exito.',\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n  async ErrorAlert() {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Error',\r\n      message: 'Usuario o Contraseña Incorrecta.',\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n //Temporalmente tanto el cod_punto y cod_usuarios le asignaremos el 1 hasta poder generarlo de forma dinámica\r\n\r\n puntosAcumulados:any;\r\n precioArticulo:any;\r\n articuloSeleccionado:any;\r\n cod_recompensas:any;\r\n\r\n cod_puntos:any;\r\n\r\n \r\n\r\n\r\n\r\n\r\n canjearPuntos(i) {\r\n \r\n  //Almacena los puntos cumulados por el usuario\r\n   this.puntosAcumulados= ((document.getElementById(\"puntos\") as HTMLIonLabelElement).textContent);\r\n\r\n  //Almacena el precio del articulo\r\n  this.precioArticulo = ((document.getElementById('puntosArticulo' + i) as HTMLIonCheckboxElement).textContent);\r\n\r\n  //Valida cual de los artículos fue seleccionado o si un artículo fue seleccionado\r\n  this.articuloSeleccionado = ((document.getElementById('puntosArticulo' + i) as HTMLIonCheckboxElement).checked);\r\n\r\n  //Capturamos el id del boton \r\n  let botonId = ((document.getElementById('boton'+i) as HTMLIonButtonElement).id);\r\n\r\n  //Almacenamos el cod_puntos que está activo en ese momento.\r\n  this.cod_puntos=((document.getElementById('cod_puntos') as HTMLIonLabelElement).textContent);\r\n\r\n\r\n  //Seleccionamos el untimo caracter de los botones dinámicos.\r\n  let ultimoCaracterBoton = botonId.charAt(botonId.length - 1);\r\n\r\n//Cambiamos el tipo de datos a entero para poder hacer la resta\r\n  let puntosInt= parseInt(this.puntosAcumulados);\r\n  let precioInt =parseInt(this.precioArticulo);\r\n \r\n//Obtenemos el ID del artículo para luego insertarlo en el recibo\r\n  this.cod_recompensas = ((document.getElementById('cod_recompensas'+ i) as HTMLInputElement).textContent);\r\n\r\n\r\n \r\n\r\n  console.log( this.cod_recompensas);\r\n  console.log(this.cod_puntos);\r\n\r\n\r\n\r\n  \r\n  //Para registro de recibo\r\n\r\n//Condición que valida si el botón seleccionado y el index son el mismo, además si el checkbox está seleccionado\r\n  if (i == ultimoCaracterBoton && this.articuloSeleccionado==true){\r\n\r\n\r\n    //Condición que valida si los puntos de la recompensa exceden los puntos que tenemos\r\n      if(precioInt > puntosInt){\r\n        alert('El artículo seleccionado excede la cantidad de puntos acumulados');\r\n        return;\r\n\r\n        }\r\n        \r\n    //Confirma antes de procesar el cambio de recompensa por puntos\r\n    if (confirm('¿Está seguro de que desea cambiar sus puntos por este artículo?')) {\r\n     \r\n      let resultado = parseInt(this.puntosAcumulados) - parseInt(this.precioArticulo);\r\n      console.log(resultado);\r\n\r\n      let cod_usuarios, puntos_acumulados;\r\n      cod_usuarios = this.cod_usuario;\r\n      puntos_acumulados = resultado;\r\n\r\n \r\n \r\n  //Creamos los datos del recibo e insertamos los datos en la tabla Recibos\r\n  this.servicioActualizarPuntos.ActualizarPuntos(this.cod_puntos,puntos_acumulados,cod_usuarios).subscribe((data)=>{\r\n    this.datos=data;\r\n    if(this.datos.respuesta==\"OK\"){\r\n        alert('¡Enhorabuena!, su recompensa ha sido procesada');\r\n        this.registroRecibo.IngresarRecibo(this.cod_usuario,this.cod_recompensas).subscribe((data)=>{\r\n          this.datos = data; \r\n          console.log (this.datos);\r\n\r\n          document.getElementById('puntos').innerHTML =resultado+\"\";\r\n          \r\n        },\r\n        (error)=>{\r\n          alert(error);\r\n        });\r\n        \r\n    }\r\n    else{\r\n      console.log('No funcionó')\r\n    }\r\n    \r\n    \r\n  })\r\n\r\n      \r\n      } \r\n\r\n    }\r\n    //Condición que devuelvel mensaje cuando no se marca ningún checkbox\r\n    else{\r\n      alert('Recuerde seleccionar la recompensa a cambiar.');\r\n      return;\r\n    }\r\n    // this.router.navigate(['/login']); \r\n  \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvbXBlbnNhcy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <!-- Agregamos un bucle for para que muestre los puntos disponibles -->\\r\\n\\r\\n  <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n          <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <!-- Obtenemos los puntos acumulados -->\\r\\n\\r\\n      <!-- <script src=\\\"http://code.jquery.com/jquery-1.11.0.min.js\\\"></script>\\r\\n  <script>\\r\\n      $(function(){\\r\\n          $(\\\"#codigo\\\").load(\\\"ajax/test.html\\\", function() {\\r\\n          alert(\\\"Load was performed.\\\");\\r\\n          });     \\r\\n          \\r\\n      })\\r\\n  </script> -->\\r\\n\\r\\n      <ion-label *ngFor=\\\"let datosMisPuntos of misPuntos\\\" slot=\\\"end\\\" style=\\\"padding: 5px;\\\" id=\\\"puntos\\\">{{datosMisPuntos.puntosacumulados}}</ion-label>\\r\\n\\r\\n\\r\\n      <ion-label *ngFor=\\\"let datosMisPuntos of misPuntos\\\" class=\\\"ocultar\\\" id=\\\"cod_puntos\\\">{{datosMisPuntos.cod_puntos}}</ion-label>\\r\\n      <img slot=\\\"end\\\" style=\\\"padding: 5px;\\\" src=\\\"assets/imagenes/moneda.png\\\">\\r\\n      <ion-title>Mis Puntos</ion-title>\\r\\n\\r\\n\\r\\n  </ion-toolbar>\\r\\n\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-header collapse=\\\"condense\\\">\\r\\n      <ion-toolbar>\\r\\n          <ion-title size=\\\"large\\\">Recompensas</ion-title>\\r\\n      </ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n  <div id=\\\"container\\\">\\r\\n      <!-- Obtenemos todos los artículos disponibles recorriendo la bd con un ciclo foor -->\\r\\n      <ion-card *ngFor=\\\"let recompensa of recompensas;  let i = index\\\">\\r\\n          <ion-card-header>\\r\\n              <!-- llamamos al nombre de la recompensa -->\\r\\n              <ion-card-title>\\r\\n                  <ion-label id=\\\"{{'cod_recompensas' + i}}\\\">{{recompensa.cod_recompensa}}</ion-label> {{recompensa.nombre}}</ion-card-title>\\r\\n\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n              <img src={{recompensa.imagen}}>\\r\\n              <br>\\r\\n\\r\\n              <!-- Asignamos un ID único a cada botón que se autogenere -->\\r\\n              <ion-button id=\\\"{{'boton' + i}}\\\" color=\\\"warning\\\" (click)=\\\"canjearPuntos(i);\\\">\\r\\n                  <ion-icon name=\\\"wallet\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                  Usar Puntos\\r\\n              </ion-button>\\r\\n\\r\\n              <br>\\r\\n              <ion-list>\\r\\n                  <ion-item>\\r\\n                      <!-- Obtenemos los puntos de la recompensa -->\\r\\n                      <ion-label color=\\\"warning\\\">{{recompensa.puntos}}</ion-label>\\r\\n                      <!-- Le asignamos un ID dinámico a cada kabel de puntos que se genere -->\\r\\n\\r\\n                      <ion-checkbox slot=\\\"end\\\" color=\\\"warning\\\" id=\\\"{{'puntosArticulo' + i}}\\\">{{recompensa.puntos}}</ion-checkbox>\\r\\n\\r\\n                      <label slot=\\\"start\\\" class=\\\"centrarlabel\\\"> Puntos</label>\\r\\n                  </ion-item>\\r\\n              </ion-list>\\r\\n\\r\\n              <br>\\r\\n              <label class=\\\"centrarlabel\\\"><b>Descripcion:</b> </label>\\r\\n              <!-- Llamamos a la descripcción de la recompensa -->\\r\\n              <label class=\\\"centrarlabel\\\"> {{recompensa.descripcion}}</label>\\r\\n          </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n  </div>\\r\\n  <ion-card>\\r\\n\\r\\n\\r\\n\\r\\n  </ion-card>\";"]}