{"version":3,"sources":["webpack:///src/app/Services/actualizarpuntos.service.ts","webpack:///src/app/Services/recompensas.service.ts","webpack:///src/app/recompensas/recompensas-routing.module.ts","webpack:///src/app/recompensas/recompensas.module.ts","webpack:///src/app/recompensas/recompensas.page.ts","webpack:///src/app/recompensas/recompensas.page.scss","webpack:///src/app/recompensas/recompensas.page.html"],"names":["ActualizarpuntosService","http","cod_puntos","puntos_acumulado","cod_usuario","get","HttpClient","Injectable","providedIn","RecompensasService","routes","path","component","RecompensasPage","RecompensasPageRoutingModule","NgModule","imports","RouterModule","exports","RecompensasPageModule","CommonModule","FormsModule","IonicModule","declarations","ionLoaderService","servicio","servicioPuntos","servicioActualizarPuntos","registroRecibo","alertController","alertCtrl","router","Variableglobal","obtenerrecompensas","subscribe","data","recompensas","error","console","log","obtenerMisPuntos","misPuntos","ActualizarPuntos","puntosAcumulados","alert","create","header","message","buttons","text","role","handler","present","cssClass","i","document","getElementById","textContent","precioArticulo","articuloSeleccionado","checked","botonId","id","ultimoCaracterBoton","charAt","length","puntosInt","parseInt","precioInt","cod_recompensas","AlertaDeExceder","confirm","resultado","cod_usuarios","puntos_acumulados","datos","respuesta","AlertaRecompensaCambiada","IngresarRecibo","innerHTML","AlertaDeError","AlertaRecuerdeCambiar","IonLoaderService","MispuntosService","RegistroReciboService","AlertController","Router","Component","selector","template"],"mappings":"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","file":"src_app_recompensas_recompensas_module_ts-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActualizarpuntosService {\n\n  constructor(public http: HttpClient) { }\n\n  ActualizarPuntos(cod_puntos:any,puntos_acumulado:any,cod_usuario:any)\n  {\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ActualizarOrden?cod_puntos=\"+cod_puntos+\"&puntosacumulados=\"+puntos_acumulado+\"&cod_usuario=\"+cod_usuario+\"\");\n  }\n\n  // return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/ActualizarOrden/\"+cod_puntos+\"/\"+puntos_acumulado+\"/\"+cod_usuario+\"\");\n    \n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecompensasService {\n\n  constructor(public http: HttpClient) { }\n\n  obtenerrecompensas(){\n    return this.http.get('http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ConsultarListadodeRecompensas');\n  }\n\n//   return this.http.get('https://localhost:44371/api/MisCallesLimpiasRD/ConsultarListadodeRecompensas');\n// }\n\n\n  obtenerMisPuntos(cod_usuario: any){\n    return this.http.get('http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ConsultarInfMisPuntos?cod_usuario=' + cod_usuario);\n  }\n\n//   return this.http.get('https://localhost:44371/api/MisCallesLimpiasRD/ConsultarInfMisPuntos/' + cod_usuario);\n// }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecompensasPage } from './recompensas.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecompensasPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecompensasPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecompensasPageRoutingModule } from './recompensas-routing.module';\n\nimport { RecompensasPage } from './recompensas.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RecompensasPageRoutingModule\n  ],\n  declarations: [RecompensasPage]\n})\nexport class RecompensasPageModule {}\n","import { RecompensasService } from '../Services/recompensas.service';\nimport {ActualizarpuntosService} from '../Services/actualizarpuntos.service'\nimport { Component, OnInit,  ViewChild, ElementRef } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { IonLoaderService } from '../Services/ion-loader.service';\n\nimport { interval, Subscription } from 'rxjs';\nimport {RegistroReciboService} from '../Services/registrorecibo.service';\nimport { MispuntosService } from '../Services/mispuntos.service';\nimport { Variableglobal } from '../variableglobal';\nimport { Router } from \"@angular/router\"; \n\n\n@Component({\n  selector: 'app-recompensas',\n  templateUrl: './recompensas.page.html',\n  styleUrls: ['./recompensas.page.scss'],\n})\nexport class RecompensasPage implements OnInit {\n  cod_usuario:any;\n  public datos:any;\n  subscription: Subscription;\n\n\n  constructor(\n    private ionLoaderService: IonLoaderService,\n    public servicio:RecompensasService, \n    public servicioPuntos: MispuntosService,\n    public servicioActualizarPuntos:ActualizarpuntosService,\n    public registroRecibo: RegistroReciboService,\n    public alertController: AlertController,\n    private alertCtrl: AlertController,\n    private router:Router\n    ) { \n      this.cod_usuario = Variableglobal.cod_usuario;\n\n    }\n  \n  recompensas:any;\n  misPuntos:any;\n  \n  ngOnInit() {\n    this.cod_usuario = Variableglobal.cod_usuario;\n    this.servicio.obtenerrecompensas()\n    .subscribe(\n      (data)=>{this.recompensas = data;},\n      (error)=>{console.log(error);}\n    )\n\n   \n      //Esta variable llamada this.cod_usuario almacena el ID del usuario. \n      //Obtenemos los puntos del usuario logeado corrientemente\n      this.cod_usuario = Variableglobal.cod_usuario;    \n      this.servicioPuntos.obtenerMisPuntos(this.cod_usuario)\n      .subscribe(\n        (data)=>{this.misPuntos = data;},\n        (error)=>{console.log(error);}\n      )\n\n      //Llamamos al procedimiento para actualizar los puntos\n    this.servicioActualizarPuntos.ActualizarPuntos(this.cod_puntos, this.cod_usuario, this.puntosAcumulados)\n    .subscribe(\n      (data)=>{this.recompensas = data;}, \n      (error)=>{console.log(error);}\n    )   \n    \n\n    \n  }\n\n  async presentConfirm() {\n    let alert = this.alertCtrl.create({\n      header: \"Prueba\",\n      message: 'Do you want to buy this book?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Buy',\n          handler: () => {\n            console.log('Buy clicked');\n          }\n        }\n      ]\n    });\n     (await alert).present();\n  }\n\n\n\n\n\n  async AlertaRecompensaCambiada() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: '¡Enhorabuena!',\n      message: 'Su recompensa ha sido procesada con exito, por favor dirigirse a su punto de cambio mas cercano.',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n  async AlertaDeExceder() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      message: 'El artículo seleccionado excede la cantidad de puntos acumulados',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n\n  async AlertaDeError() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      message: 'En estos momentos no se puede realizar dicha acción',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async AlertaRecuerdeCambiar() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      message: 'Recuerde seleccionar la recompensa a cambiar',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n\n //Temporalmente tanto el cod_punto y cod_usuarios le asignaremos el 1 hasta poder generarlo de forma dinámica\n\n puntosAcumulados:any;\n precioArticulo:any;\n articuloSeleccionado:any;\n cod_recompensas:any;\n\n cod_puntos:any;\n\n \n\n\n\n\n canjearPuntos(i) {\n \n  //Almacena los puntos cumulados por el usuario\n   this.puntosAcumulados= ((document.getElementById(\"puntos\") as HTMLIonLabelElement).textContent);\n\n  //Almacena el precio del articulo\n  this.precioArticulo = ((document.getElementById('puntosArticulo' + i) as HTMLIonCheckboxElement).textContent);\n\n  //Valida cual de los artículos fue seleccionado o si un artículo fue seleccionado\n  this.articuloSeleccionado = ((document.getElementById('puntosArticulo' + i) as HTMLIonCheckboxElement).checked);\n\n  //Capturamos el id del boton \n  let botonId = ((document.getElementById('boton'+i) as HTMLIonButtonElement).id);\n\n  //Almacenamos el cod_puntos que está activo en ese momento.\n  this.cod_puntos=((document.getElementById('cod_puntos') as HTMLIonLabelElement).textContent);\n\n\n  //Seleccionamos el untimo caracter de los botones dinámicos.\n  let ultimoCaracterBoton = botonId.charAt(botonId.length - 1);\n\n//Cambiamos el tipo de datos a entero para poder hacer la resta\n  let puntosInt= parseInt(this.puntosAcumulados);\n  let precioInt =parseInt(this.precioArticulo);\n \n//Obtenemos el ID del artículo para luego insertarlo en el recibo\n  this.cod_recompensas = ((document.getElementById('cod_recompensas'+ i) as HTMLInputElement).textContent);\n\n\n \n\n  console.log( this.cod_recompensas);\n  console.log(this.cod_puntos);\n\n\n\n  \n  //Para registro de recibo\n\n//Condición que valida si el botón seleccionado y el index son el mismo, además si el checkbox está seleccionado\n  if (i == ultimoCaracterBoton && this.articuloSeleccionado==true){\n\n\n    //Condición que valida si los puntos de la recompensa exceden los puntos que tenemos\n      if(precioInt > puntosInt){\n        this.AlertaDeExceder();\n        return;\n\n        }\n        \n    //Confirma antes de procesar el cambio de recompensa por puntos\n    if (confirm('¿Está seguro de que desea cambiar sus puntos por este artículo?')) {\n     \n      let resultado = parseInt(this.puntosAcumulados) - parseInt(this.precioArticulo);\n      console.log(resultado);\n\n      let cod_usuarios, puntos_acumulados;\n      cod_usuarios = this.cod_usuario;\n      puntos_acumulados = resultado;\n\n      // this.ionLoaderService.simpleLoader(); No necesario en esta página\n\n \n  //Creamos los datos del recibo e insertamos los datos en la tabla Recibos\n  this.servicioActualizarPuntos.ActualizarPuntos(this.cod_puntos,puntos_acumulados,cod_usuarios).subscribe((data)=>{\n    this.datos=data;\n    if(this.datos.respuesta==\"OK\"){\n      // this.ionLoaderService.dismissLoader();  No necesario en esta página\n        this.AlertaRecompensaCambiada();\n        this.registroRecibo.IngresarRecibo(this.cod_usuario,this.cod_recompensas).subscribe((data)=>{\n          this.datos = data; \n          console.log (this.datos);\n\n          document.getElementById('puntos').innerHTML =resultado+\"\";\n          \n        },\n        (error)=>{\n          this.AlertaDeError();\n        });\n        \n    }\n    else{\n     this.AlertaDeError();\n    }\n    \n\n  })\n\n      \n      } \n\n    }\n    //Condición que devuelvel mensaje cuando no se marca ningún checkbox\n    else{\n      this.AlertaRecuerdeCambiar();\n      return;\n    }\n    // this.router.navigate(['/login']); \n  \n  }\n\n}\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWNvbXBlbnNhcy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n    <!-- Agregamos un bucle for para que muestre los puntos disponibles -->\\n\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <!-- Obtenemos los puntos acumulados -->\\n\\n        <!-- <script src=\\\"http://code.jquery.com/jquery-1.11.0.min.js\\\"></script>\\n  <script>\\n      $(function(){\\n          $(\\\"#codigo\\\").load(\\\"ajax/test.html\\\", function() {\\n          alert(\\\"Load was performed.\\\");\\n          });     \\n          \\n      })\\n  </script> -->\\n\\n        <ion-label *ngFor=\\\"let datosMisPuntos of misPuntos\\\" slot=\\\"end\\\" style=\\\"padding: 5px;\\\" id=\\\"puntos\\\">{{datosMisPuntos.puntosacumulados}}</ion-label>\\n\\n\\n        <ion-label *ngFor=\\\"let datosMisPuntos of misPuntos\\\" class=\\\"ocultar\\\" id=\\\"cod_puntos\\\">{{datosMisPuntos.cod_puntos}}</ion-label>\\n        <img slot=\\\"end\\\" style=\\\"padding: 5px;\\\" src=\\\"assets/imagenes/moneda.png\\\">\\n        <ion-title>Mis Puntos</ion-title>\\n\\n\\n    </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n    <ion-header collapse=\\\"condense\\\">\\n        <ion-toolbar>\\n            <ion-title size=\\\"large\\\">Recompensas</ion-title>\\n        </ion-toolbar>\\n    </ion-header>\\n\\n    <div id=\\\"container\\\">\\n        <!-- Obtenemos todos los artículos disponibles recorriendo la bd con un ciclo foor -->\\n        <ion-card *ngFor=\\\"let recompensa of recompensas;  let i = index\\\">\\n            <ion-card-header>\\n                <!-- llamamos al nombre de la recompensa -->\\n                <ion-card-title>\\n                    <ion-label id=\\\"{{'cod_recompensas' + i}}\\\">{{recompensa.cod_recompensa}}</ion-label> {{recompensa.nombre}}</ion-card-title>\\n\\n            </ion-card-header>\\n            <ion-card-content>\\n                <img src={{recompensa.imagen}}>\\n                <br>\\n\\n                <!-- Asignamos un ID único a cada botón que se autogenere -->\\n                <ion-button id=\\\"{{'boton' + i}}\\\" color=\\\"warning\\\" (click)=\\\"canjearPuntos(i);\\\">\\n                    <ion-icon name=\\\"wallet\\\" slot=\\\"start\\\"></ion-icon>\\n                    Usar Puntos\\n                </ion-button>\\n\\n                <br>\\n                <ion-list>\\n                    <ion-item>\\n                        <!-- Obtenemos los puntos de la recompensa -->\\n                        <ion-label color=\\\"warning\\\">{{recompensa.puntos}}</ion-label>\\n                        <!-- Le asignamos un ID dinámico a cada kabel de puntos que se genere -->\\n\\n                        <ion-checkbox slot=\\\"end\\\" color=\\\"warning\\\" id=\\\"{{'puntosArticulo' + i}}\\\">{{recompensa.puntos}}</ion-checkbox>\\n\\n                        <label slot=\\\"start\\\" class=\\\"centrarlabel\\\"> Puntos</label>\\n                    </ion-item>\\n                </ion-list>\\n\\n                <br>\\n                <label class=\\\"centrarlabel\\\"><b>Descripcion:</b> </label>\\n                <!-- Llamamos a la descripcción de la recompensa -->\\n                <label class=\\\"centrarlabel\\\"> {{recompensa.descripcion}}</label>\\n            </ion-card-content>\\n        </ion-card>\\n\\n    </div>\\n    <ion-card>\\n\\n\\n\\n    </ion-card>\";"]}