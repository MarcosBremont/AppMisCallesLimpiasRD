<<<<<<< HEAD
{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/Services/ion-loader.service.ts","./src/app/Services/mispuntos.service.ts","./src/app/Services/registro.service.ts","./src/app/Services/registrorecibo.service.ts","./src/app/modal-popover/modal-popover.page.ts","./src/app/variableglobal.ts","./src/app/modal-popover/modal-popover.page.scss","./src/app/modal-popover/modal-popover.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;ACtC1C;AACQ;IAKtC,gBAAgB,SAAhB,gBAAgB;IAE3B,YACS,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IACzC,CAAC;IAEL,YAAY;QACV,IAAI,CAAC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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\r\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\r\nimport { createGesture } from './index-f49d994d.js';\r\n\r\nconst createButtonActiveGesture = (el, isButton) => {\r\n  let currentTouchedButton;\r\n  let initialTouchedButton;\r\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\r\n    if (typeof document === 'undefined') {\r\n      return;\r\n    }\r\n    const target = document.elementFromPoint(x, y);\r\n    if (!target || !isButton(target)) {\r\n      clearActiveButton();\r\n      return;\r\n    }\r\n    if (target !== currentTouchedButton) {\r\n      clearActiveButton();\r\n      setActiveButton(target, hapticFeedbackFn);\r\n    }\r\n  };\r\n  const setActiveButton = (button, hapticFeedbackFn) => {\r\n    currentTouchedButton = button;\r\n    if (!initialTouchedButton) {\r\n      initialTouchedButton = currentTouchedButton;\r\n    }\r\n    const buttonToModify = currentTouchedButton;\r\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\r\n    hapticFeedbackFn();\r\n  };\r\n  const clearActiveButton = (dispatchClick = false) => {\r\n    if (!currentTouchedButton) {\r\n      return;\r\n    }\r\n    const buttonToModify = currentTouchedButton;\r\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\r\n    /**\r\n     * Clicking on one button, but releasing on another button\r\n     * does not dispatch a click event in browsers, so we\r\n     * need to do it manually here. Some browsers will\r\n     * dispatch a click if clicking on one button, dragging over\r\n     * another button, and releasing on the original button. In that\r\n     * case, we need to make sure we do not cause a double click there.\r\n     */\r\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\r\n      currentTouchedButton.click();\r\n    }\r\n    currentTouchedButton = undefined;\r\n  };\r\n  return createGesture({\r\n    el,\r\n    gestureName: 'buttonActiveDrag',\r\n    threshold: 0,\r\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\r\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\r\n    onEnd: () => {\r\n      clearActiveButton(true);\r\n      hapticSelectionEnd();\r\n      initialTouchedButton = undefined;\r\n    }\r\n  });\r\n};\r\n\r\nexport { createButtonActiveGesture as c };\r\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\r\n\r\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n  if (delegate) {\r\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n  }\r\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n    throw new Error('framework delegate is missing');\r\n  }\r\n  const el = (typeof component === 'string')\r\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n    : component;\r\n  if (cssClasses) {\r\n    cssClasses.forEach(c => el.classList.add(c));\r\n  }\r\n  if (componentProps) {\r\n    Object.assign(el, componentProps);\r\n  }\r\n  container.appendChild(el);\r\n  await new Promise(resolve => componentOnReady(el, resolve));\r\n  return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n  if (element) {\r\n    if (delegate) {\r\n      const container = element.parentElement;\r\n      return delegate.removeViewFromDom(container, element);\r\n    }\r\n    element.remove();\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nexport { attachComponent as a, detachComponent as d };\r\n","const HapticEngine = {\r\n  getEngine() {\r\n    const win = window;\r\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\r\n  },\r\n  available() {\r\n    return !!this.getEngine();\r\n  },\r\n  isCordova() {\r\n    return !!window.TapticEngine;\r\n  },\r\n  isCapacitor() {\r\n    const win = window;\r\n    return !!win.Capacitor;\r\n  },\r\n  impact(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n    engine.impact({ style });\r\n  },\r\n  notification(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n    engine.notification({ style });\r\n  },\r\n  selection() {\r\n    this.impact({ style: 'light' });\r\n  },\r\n  selectionStart() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionStart();\r\n    }\r\n    else {\r\n      engine.gestureSelectionStart();\r\n    }\r\n  },\r\n  selectionChanged() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionChanged();\r\n    }\r\n    else {\r\n      engine.gestureSelectionChanged();\r\n    }\r\n  },\r\n  selectionEnd() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionEnd();\r\n    }\r\n    else {\r\n      engine.gestureSelectionEnd();\r\n    }\r\n  }\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n  HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n  HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n  HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n  HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\r\n */\r\nconst hapticImpact = (options) => {\r\n  HapticEngine.impact(options);\r\n};\r\n\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n","const spinners = {\r\n  'bubbles': {\r\n    dur: 1000,\r\n    circles: 9,\r\n    fn: (dur, index, total) => {\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      const angle = 2 * Math.PI * index / total;\r\n      return {\r\n        r: 5,\r\n        style: {\r\n          'top': `${9 * Math.sin(angle)}px`,\r\n          'left': `${9 * Math.cos(angle)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'circles': {\r\n    dur: 1000,\r\n    circles: 8,\r\n    fn: (dur, index, total) => {\r\n      const step = index / total;\r\n      const animationDelay = `${(dur * step) - dur}ms`;\r\n      const angle = 2 * Math.PI * step;\r\n      return {\r\n        r: 5,\r\n        style: {\r\n          'top': `${9 * Math.sin(angle)}px`,\r\n          'left': `${9 * Math.cos(angle)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'circular': {\r\n    dur: 1400,\r\n    elmDuration: true,\r\n    circles: 1,\r\n    fn: () => {\r\n      return {\r\n        r: 20,\r\n        cx: 48,\r\n        cy: 48,\r\n        fill: 'none',\r\n        viewBox: '24 24 48 48',\r\n        transform: 'translate(0,0)',\r\n        style: {}\r\n      };\r\n    }\r\n  },\r\n  'crescent': {\r\n    dur: 750,\r\n    circles: 1,\r\n    fn: () => {\r\n      return {\r\n        r: 26,\r\n        style: {}\r\n      };\r\n    }\r\n  },\r\n  'dots': {\r\n    dur: 750,\r\n    circles: 3,\r\n    fn: (_, index) => {\r\n      const animationDelay = -(110 * index) + 'ms';\r\n      return {\r\n        r: 6,\r\n        style: {\r\n          'left': `${9 - (9 * index)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'lines': {\r\n    dur: 1000,\r\n    lines: 12,\r\n    fn: (dur, index, total) => {\r\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      return {\r\n        y1: 17,\r\n        y2: 29,\r\n        style: {\r\n          'transform': transform,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'lines-small': {\r\n    dur: 1000,\r\n    lines: 12,\r\n    fn: (dur, index, total) => {\r\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      return {\r\n        y1: 12,\r\n        y2: 20,\r\n        style: {\r\n          'transform': transform,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\nconst SPINNERS = spinners;\r\n\r\nexport { SPINNERS as S };\r\n","const hostContext = (selector, el) => {\r\n  return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color, cssClassMap) => {\r\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\r\n};\r\nconst getClassList = (classes) => {\r\n  if (classes !== undefined) {\r\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n    return array\r\n      .filter(c => c != null)\r\n      .map(c => c.trim())\r\n      .filter(c => c !== '');\r\n  }\r\n  return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n  const map = {};\r\n  getClassList(classes).forEach(c => map[c] = true);\r\n  return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n    const router = document.querySelector('ion-router');\r\n    if (router) {\r\n      if (ev != null) {\r\n        ev.preventDefault();\r\n      }\r\n      return router.push(url, direction, animation);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IonLoaderService {\r\n\r\n  constructor(\r\n    public loadingController: LoadingController\r\n  ) { }\r\n\r\n  simpleLoader() {\r\n    this.loadingController.create({\r\n        message: 'Cargando, por favor espere...'\r\n    }).then((response) => {\r\n        response.present();\r\n    });\r\n\r\n    \r\n}\r\n\r\ndismissLoader() {\r\n  this.loadingController.dismiss().then((response) => {\r\n      console.log('Loader closed!', response);\r\n  }).catch((err) => {\r\n      console.log('Error occured : ', err);\r\n  });\r\n}\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MispuntosService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n\r\n  obtenerMisPuntos(cod_usuario: any){\r\n    return this.http.get('http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ConsultarInfMisPuntos?cod_usuario=' + cod_usuario);\r\n  }\r\n \r\n//   return this.http.get('https://localhost:44371/api/MisCallesLimpiasRD/ConsultarInfMisPuntos/' + cod_usuario);\r\n// }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistroService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  RegistroUsuario(usuario:string,email:string,clave:string,cedula:string,telefono:string,estado:string){\r\n  //   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/RegistrarUsuario/\"+usuario+\"/\"+email+\"/\"+clave+\"/\"+cedula+\"/\"+telefono+\"/\"+\"\");\r\n    \r\n  // }\r\n\r\n  return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/RegistrarUsuario?usuario=\"+usuario+\"&correo_Usuario=\"+email+\"&cedula_usuario=\"+cedula+\"&clave=\"+clave+\"&telefono_Usuario=\"+telefono+\"&estado=\"+estado+\"\");\r\n    \r\n}\r\n\r\n  VerificarCorreoElectronico(correo_Usuario:string){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/VerificarCorreoElectronico?correo_Usuario=\"+correo_Usuario+\"\");\r\n    \r\n  }\r\n//   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/VerificarCorreoElectronico?correo_Usuario=\"+correo_Usuario+\"\");\r\n    \r\n// }\r\n//   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/VerificarCorreoElectronico/\"+email+\"\");\r\n    \r\n// }\r\n\r\n\r\nNivelUsuario(cod_usuario:any){\r\n//   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/nivelUsuario/\"+cod_usuario+\"\");\r\n  \r\n// }\r\n\r\nreturn this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/nivelUsuario?cod_usuario=\"+cod_usuario+\"\");\r\n    \r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistroReciboService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  IngresarRecibo(cod_usuario:any,cod_recompensa:any){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/RegistrarRecibos?cod_usuario=\"+cod_usuario+\"&cod_recompensa=\"+cod_recompensa+\"\");\r\n    \r\n  }\r\n\r\n  MostrarRecibos(cod_usuario:any){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/consultarrecibosporid?cod_usuario=\"+cod_usuario+\"\");\r\n    \r\n  }\r\n\r\n  MostrarRecibosPorID(nuevoformatocodigobono:any){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/consultarrecibosporsuidrecibo?cod_recibo=\"+nuevoformatocodigobono+\"\");\r\n    \r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { DatePipe } from '@angular/common';\r\n  \r\n\r\n@Component({\r\n  selector: 'app-modal-popover',\r\n  templateUrl: './modal-popover.page.html',\r\n  styleUrls: ['./modal-popover.page.scss'],\r\n      providers: [DatePipe]\r\n\r\n})\r\n\r\nexport class ModalPopoverPage implements OnInit {\r\n  \r\n  @Input() nombreproducto: string;\r\n  @Input() usuario: string;\r\n  @Input() cod_bono: number;\r\n  @Input() fechaCompleta: string;\r\n  \r\n  myDate: String = new Date().toISOString();\r\n\r\n\r\n  constructor(\r\n    private modalCtr: ModalController,\r\n  ) {\r\n    \r\n   }\r\n\r\n  ngOnInit() { \r\n    \r\n  }\r\n\r\n\r\n  async close() {\r\n    await this.modalCtr.dismiss();\r\n  }\r\n\r\n}","export class Variableglobal {\r\n  public static cod_usuario:any; \r\n  public static nombre_usuario:any;\r\n  public static correo_Usuario:any;\r\n  public static cedula_usuario:any;\r\n  public static clave:any;\r\n  public static telefono_Usuario:any;\r\n  public static cod_nivel:any; \r\n  public static foto_usuario:any; \r\n\r\n  \r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2RhbC1wb3BvdmVyLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title style=\\\"text-align: center;\\\">Recibo </ion-title>\\r\\n    <ion-button (click)=\\\"close()\\\">Close</ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    \\r\\n    <ion-row>\\r\\n      <ion-col style=\\\"text-align: center;\\\">\\r\\n        <label>\\r\\n          <ion-datetime style=\\\"text-align: right;\\\" displayFormat=\\\"MMM DD, h:mm A\\\" [(ngModel)]=\\\"myDate\\\"></ion-datetime>\\r\\n        </label>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        <img style=\\\"width: 120px;;margin:auto;display:block\\\" src=\\\"assets/imagenes/MisCallesLimpiasRDCircle.png\\\">\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row style=\\\"text-align: center;\\\">\\r\\n      <ion-col text-center>\\r\\n        <label style=\\\"text-align: center; font-weight: bold;\\\">\\r\\n          Mis Calles Limpias RD\\r\\n        </label>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    \\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        {{ cod_bono }}\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    \\r\\n   \\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        Fecha Creacion: {{ fechaCompleta }}\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    \\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        Usuario : {{ usuario }}\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        Producto : {{ nombreproducto }}\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <ion-row>\\r\\n      <ion-col text-center>\\r\\n        <p style=\\\"text-align: center;\\\">\\r\\n          Gracias por utilizar Mis Calles Limpias RD.\\r\\n        </p>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}
=======
{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/Services/ion-loader.service.ts","./src/app/Services/mispuntos.service.ts","./src/app/Services/registro.service.ts","./src/app/Services/registrorecibo.service.ts","./src/app/variableglobal.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;ACtC1C;AACQ;IAKtC,gBAAgB,SAAhB,gBAAgB;IAE3B,YACS,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IACzC,CAAC;IAEL,YAAY;QACV,IAAI,CAAC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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\r\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\r\nimport { createGesture } from './index-f49d994d.js';\r\n\r\nconst createButtonActiveGesture = (el, isButton) => {\r\n  let currentTouchedButton;\r\n  let initialTouchedButton;\r\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\r\n    if (typeof document === 'undefined') {\r\n      return;\r\n    }\r\n    const target = document.elementFromPoint(x, y);\r\n    if (!target || !isButton(target)) {\r\n      clearActiveButton();\r\n      return;\r\n    }\r\n    if (target !== currentTouchedButton) {\r\n      clearActiveButton();\r\n      setActiveButton(target, hapticFeedbackFn);\r\n    }\r\n  };\r\n  const setActiveButton = (button, hapticFeedbackFn) => {\r\n    currentTouchedButton = button;\r\n    if (!initialTouchedButton) {\r\n      initialTouchedButton = currentTouchedButton;\r\n    }\r\n    const buttonToModify = currentTouchedButton;\r\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\r\n    hapticFeedbackFn();\r\n  };\r\n  const clearActiveButton = (dispatchClick = false) => {\r\n    if (!currentTouchedButton) {\r\n      return;\r\n    }\r\n    const buttonToModify = currentTouchedButton;\r\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\r\n    /**\r\n     * Clicking on one button, but releasing on another button\r\n     * does not dispatch a click event in browsers, so we\r\n     * need to do it manually here. Some browsers will\r\n     * dispatch a click if clicking on one button, dragging over\r\n     * another button, and releasing on the original button. In that\r\n     * case, we need to make sure we do not cause a double click there.\r\n     */\r\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\r\n      currentTouchedButton.click();\r\n    }\r\n    currentTouchedButton = undefined;\r\n  };\r\n  return createGesture({\r\n    el,\r\n    gestureName: 'buttonActiveDrag',\r\n    threshold: 0,\r\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\r\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\r\n    onEnd: () => {\r\n      clearActiveButton(true);\r\n      hapticSelectionEnd();\r\n      initialTouchedButton = undefined;\r\n    }\r\n  });\r\n};\r\n\r\nexport { createButtonActiveGesture as c };\r\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\r\n\r\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n  if (delegate) {\r\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n  }\r\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n    throw new Error('framework delegate is missing');\r\n  }\r\n  const el = (typeof component === 'string')\r\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n    : component;\r\n  if (cssClasses) {\r\n    cssClasses.forEach(c => el.classList.add(c));\r\n  }\r\n  if (componentProps) {\r\n    Object.assign(el, componentProps);\r\n  }\r\n  container.appendChild(el);\r\n  await new Promise(resolve => componentOnReady(el, resolve));\r\n  return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n  if (element) {\r\n    if (delegate) {\r\n      const container = element.parentElement;\r\n      return delegate.removeViewFromDom(container, element);\r\n    }\r\n    element.remove();\r\n  }\r\n  return Promise.resolve();\r\n};\r\n\r\nexport { attachComponent as a, detachComponent as d };\r\n","const HapticEngine = {\r\n  getEngine() {\r\n    const win = window;\r\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\r\n  },\r\n  available() {\r\n    return !!this.getEngine();\r\n  },\r\n  isCordova() {\r\n    return !!window.TapticEngine;\r\n  },\r\n  isCapacitor() {\r\n    const win = window;\r\n    return !!win.Capacitor;\r\n  },\r\n  impact(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n    engine.impact({ style });\r\n  },\r\n  notification(options) {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\r\n    engine.notification({ style });\r\n  },\r\n  selection() {\r\n    this.impact({ style: 'light' });\r\n  },\r\n  selectionStart() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionStart();\r\n    }\r\n    else {\r\n      engine.gestureSelectionStart();\r\n    }\r\n  },\r\n  selectionChanged() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionChanged();\r\n    }\r\n    else {\r\n      engine.gestureSelectionChanged();\r\n    }\r\n  },\r\n  selectionEnd() {\r\n    const engine = this.getEngine();\r\n    if (!engine) {\r\n      return;\r\n    }\r\n    if (this.isCapacitor()) {\r\n      engine.selectionEnd();\r\n    }\r\n    else {\r\n      engine.gestureSelectionEnd();\r\n    }\r\n  }\r\n};\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n  HapticEngine.selection();\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n  HapticEngine.selectionStart();\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n  HapticEngine.selectionChanged();\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n  HapticEngine.selectionEnd();\r\n};\r\n/**\r\n * Use this to indicate success/failure/warning to the user.\r\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\r\n */\r\nconst hapticImpact = (options) => {\r\n  HapticEngine.impact(options);\r\n};\r\n\r\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\r\n","const spinners = {\r\n  'bubbles': {\r\n    dur: 1000,\r\n    circles: 9,\r\n    fn: (dur, index, total) => {\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      const angle = 2 * Math.PI * index / total;\r\n      return {\r\n        r: 5,\r\n        style: {\r\n          'top': `${9 * Math.sin(angle)}px`,\r\n          'left': `${9 * Math.cos(angle)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'circles': {\r\n    dur: 1000,\r\n    circles: 8,\r\n    fn: (dur, index, total) => {\r\n      const step = index / total;\r\n      const animationDelay = `${(dur * step) - dur}ms`;\r\n      const angle = 2 * Math.PI * step;\r\n      return {\r\n        r: 5,\r\n        style: {\r\n          'top': `${9 * Math.sin(angle)}px`,\r\n          'left': `${9 * Math.cos(angle)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'circular': {\r\n    dur: 1400,\r\n    elmDuration: true,\r\n    circles: 1,\r\n    fn: () => {\r\n      return {\r\n        r: 20,\r\n        cx: 48,\r\n        cy: 48,\r\n        fill: 'none',\r\n        viewBox: '24 24 48 48',\r\n        transform: 'translate(0,0)',\r\n        style: {}\r\n      };\r\n    }\r\n  },\r\n  'crescent': {\r\n    dur: 750,\r\n    circles: 1,\r\n    fn: () => {\r\n      return {\r\n        r: 26,\r\n        style: {}\r\n      };\r\n    }\r\n  },\r\n  'dots': {\r\n    dur: 750,\r\n    circles: 3,\r\n    fn: (_, index) => {\r\n      const animationDelay = -(110 * index) + 'ms';\r\n      return {\r\n        r: 6,\r\n        style: {\r\n          'left': `${9 - (9 * index)}px`,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'lines': {\r\n    dur: 1000,\r\n    lines: 12,\r\n    fn: (dur, index, total) => {\r\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      return {\r\n        y1: 17,\r\n        y2: 29,\r\n        style: {\r\n          'transform': transform,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  },\r\n  'lines-small': {\r\n    dur: 1000,\r\n    lines: 12,\r\n    fn: (dur, index, total) => {\r\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n      const animationDelay = `${(dur * index / total) - dur}ms`;\r\n      return {\r\n        y1: 12,\r\n        y2: 20,\r\n        style: {\r\n          'transform': transform,\r\n          'animation-delay': animationDelay,\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\nconst SPINNERS = spinners;\r\n\r\nexport { SPINNERS as S };\r\n","const hostContext = (selector, el) => {\r\n  return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color, cssClassMap) => {\r\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\r\n};\r\nconst getClassList = (classes) => {\r\n  if (classes !== undefined) {\r\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n    return array\r\n      .filter(c => c != null)\r\n      .map(c => c.trim())\r\n      .filter(c => c !== '');\r\n  }\r\n  return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n  const map = {};\r\n  getClassList(classes).forEach(c => map[c] = true);\r\n  return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n    const router = document.querySelector('ion-router');\r\n    if (router) {\r\n      if (ev != null) {\r\n        ev.preventDefault();\r\n      }\r\n      return router.push(url, direction, animation);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IonLoaderService {\r\n\r\n  constructor(\r\n    public loadingController: LoadingController\r\n  ) { }\r\n\r\n  simpleLoader() {\r\n    this.loadingController.create({\r\n        message: 'Cargando, por favor espere...'\r\n    }).then((response) => {\r\n        response.present();\r\n    });\r\n\r\n    \r\n}\r\n\r\ndismissLoader() {\r\n  this.loadingController.dismiss().then((response) => {\r\n      console.log('Loader closed!', response);\r\n  }).catch((err) => {\r\n      console.log('Error occured : ', err);\r\n  });\r\n}\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MispuntosService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n\r\n  obtenerMisPuntos(cod_usuario: any){\r\n    return this.http.get('http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/ConsultarInfMisPuntos?cod_usuario=' + cod_usuario);\r\n  }\r\n \r\n//   return this.http.get('https://localhost:44371/api/MisCallesLimpiasRD/ConsultarInfMisPuntos/' + cod_usuario);\r\n// }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistroService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  RegistroUsuario(usuario:string,email:string,clave:string,cedula:string,telefono:string,estado:string, cod_ayuntamiento:any){\r\n  //   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/RegistrarUsuario/\"+usuario+\"/\"+email+\"/\"+clave+\"/\"+cedula+\"/\"+telefono+\"/\"+\"\");\r\n    \r\n  // }\r\n\r\n  return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/RegistrarUsuario?usuario=\"+usuario+\"&correo_Usuario=\"+email+\"&cedula_usuario=\"+cedula+\"&clave=\"+clave+\"&telefono_Usuario=\"+telefono+\"&estado=\"+estado+\"&cod_ayuntamiento=\"+ cod_ayuntamiento +\"\");\r\n    \r\n}\r\n\r\n  VerificarCorreoElectronico(correo_Usuario:string){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/VerificarCorreoElectronico?correo_Usuario=\"+correo_Usuario+\"\");\r\n    \r\n  }\r\n//   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/VerificarCorreoElectronico?correo_Usuario=\"+correo_Usuario+\"\");\r\n    \r\n// }\r\n//   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/VerificarCorreoElectronico/\"+email+\"\");\r\n    \r\n// }\r\n\r\n\r\nNivelUsuario(cod_usuario:any){\r\n//   return this.http.get(\"https://localhost:44371/api/MisCallesLimpiasRD/nivelUsuario/\"+cod_usuario+\"\");\r\n  \r\n// }\r\n\r\nreturn this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/nivelUsuario?cod_usuario=\"+cod_usuario+\"\");\r\n    \r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistroReciboService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  IngresarRecibo(cod_usuario:any,cod_recompensa:any){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/RegistrarRecibos?cod_usuario=\"+cod_usuario+\"&cod_recompensa=\"+cod_recompensa+\"\");\r\n    \r\n  }\r\n\r\n  MostrarRecibos(cod_usuario:any){\r\n    return this.http.get(\"http://api.miscalleslimpiasrd.tecnolora.com/api/MisCallesLimpiasRD/consultarrecibosporid?cod_usuario=\"+cod_usuario+\"\");\r\n    \r\n  }\r\n\r\n}\r\n","export class Variableglobal {\r\n  public static cod_usuario:any; \r\n  public static nombre_usuario:any;\r\n  public static correo_Usuario:any;\r\n  public static cedula_usuario:any;\r\n  public static clave:any;\r\n  public static telefono_Usuario:any;\r\n  public static cod_nivel:any; \r\n  public static foto_usuario:any; \r\n\r\n  \r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}
>>>>>>> 27594cd79d5bf2041e3a9edd01fa3a8f952c1dbc
