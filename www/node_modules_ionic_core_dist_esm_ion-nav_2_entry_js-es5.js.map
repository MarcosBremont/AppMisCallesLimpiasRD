{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"names":["VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","component","params","state","container","element","a","delegate","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","currentParams","keysA","Object","keys","keysB","length","key","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","r","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","gesture","enable","swipeGesture","root","setRoot","rootParams","document","querySelector","el","closest","mode","c","emit","rootChanged","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","swipeGestureChanged","l","_destroy","destroy","opts","done","queueTrns","insertStart","insertViews","insertIndex","insertComponents","removeStart","removeCount","indexOrViewCtrl","tiConfig","removeView","startIndex","setPages","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","popTo","assign","animationBuilder","push","tagName","index","canGoBackSync","getPreviousSync","indexOf","ti","skipIfBusy","reject","router","canTransition","nextTrns","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","init","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","transition","success","failed","viewsLength","viewControllers","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","t","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","s","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","g","progressEnd","h","style","navLink","routerDirection","routerAnimation","pop","NavLink","onClick","H"],"mappings":"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","file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode, c as config } from './ionic-global-63a97a32.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\r\nimport { l as assert } from './helpers-dd7e4b7b.js';\r\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-931440b1.js';\r\nimport { a as attachComponent } from './framework-delegate-4392cd63.js';\r\n\r\nconst VIEW_STATE_NEW = 1;\r\nconst VIEW_STATE_ATTACHED = 2;\r\nconst VIEW_STATE_DESTROYED = 3;\r\nclass ViewController {\r\n  constructor(component, params) {\r\n    this.component = component;\r\n    this.params = params;\r\n    this.state = VIEW_STATE_NEW;\r\n  }\r\n  async init(container) {\r\n    this.state = VIEW_STATE_ATTACHED;\r\n    if (!this.element) {\r\n      const component = this.component;\r\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\r\n    }\r\n  }\r\n  /**\r\n   * DOM WRITE\r\n   */\r\n  _destroy() {\r\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\r\n    const element = this.element;\r\n    if (element) {\r\n      if (this.delegate) {\r\n        this.delegate.removeViewFromDom(element.parentElement, element);\r\n      }\r\n      else {\r\n        element.remove();\r\n      }\r\n    }\r\n    this.nav = undefined;\r\n    this.state = VIEW_STATE_DESTROYED;\r\n  }\r\n}\r\nconst matches = (view, id, params) => {\r\n  if (!view) {\r\n    return false;\r\n  }\r\n  if (view.component !== id) {\r\n    return false;\r\n  }\r\n  const currentParams = view.params;\r\n  if (currentParams === params) {\r\n    return true;\r\n  }\r\n  if (!currentParams && !params) {\r\n    return true;\r\n  }\r\n  if (!currentParams || !params) {\r\n    return false;\r\n  }\r\n  const keysA = Object.keys(currentParams);\r\n  const keysB = Object.keys(params);\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n  // Test for A's keys different from B.\r\n  for (const key of keysA) {\r\n    if (currentParams[key] !== params[key]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nconst convertToView = (page, params) => {\r\n  if (!page) {\r\n    return null;\r\n  }\r\n  if (page instanceof ViewController) {\r\n    return page;\r\n  }\r\n  return new ViewController(page, params);\r\n};\r\nconst convertToViews = (pages) => {\r\n  return pages.map(page => {\r\n    if (page instanceof ViewController) {\r\n      return page;\r\n    }\r\n    if ('component' in page) {\r\n      /**\r\n       * TODO Ionic 6:\r\n       * Consider switching to just using `undefined` here\r\n       * as well as on the public interfaces and on\r\n       * `NavComponentWithProps`. Previously `pages` was\r\n       * of type `any[]` so TypeScript did not catch this.\r\n       */\r\n      return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\r\n    }\r\n    return convertToView(page, undefined);\r\n  }).filter(v => v !== null);\r\n};\r\n\r\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\r\n\r\nconst Nav = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\r\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\r\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\r\n    this.transInstr = [];\r\n    this.animationEnabled = true;\r\n    this.useRouter = false;\r\n    this.isTransitioning = false;\r\n    this.destroyed = false;\r\n    this.views = [];\r\n    /**\r\n     * If `true`, the nav should animate the transition of components.\r\n     */\r\n    this.animated = true;\r\n  }\r\n  swipeGestureChanged() {\r\n    if (this.gesture) {\r\n      this.gesture.enable(this.swipeGesture === true);\r\n    }\r\n  }\r\n  rootChanged() {\r\n    if (this.root !== undefined) {\r\n      if (!this.useRouter) {\r\n        this.setRoot(this.root, this.rootParams);\r\n      }\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.useRouter =\r\n      !!document.querySelector('ion-router') &&\r\n        !this.el.closest('[no-router]');\r\n    if (this.swipeGesture === undefined) {\r\n      const mode = getIonMode(this);\r\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\r\n    }\r\n    this.ionNavWillLoad.emit();\r\n  }\r\n  async componentDidLoad() {\r\n    this.rootChanged();\r\n    this.gesture = (await import('./swipe-back-ee838cf8.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\r\n    this.swipeGestureChanged();\r\n  }\r\n  disconnectedCallback() {\r\n    for (const view of this.views) {\r\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\r\n      view._destroy();\r\n    }\r\n    if (this.gesture) {\r\n      this.gesture.destroy();\r\n      this.gesture = undefined;\r\n    }\r\n    // release swipe back gesture and transition\r\n    this.transInstr.length = this.views.length = 0;\r\n    this.destroyed = true;\r\n  }\r\n  /**\r\n   * Push a new component onto the current navigation stack. Pass any additional\r\n   * information along as an object. This additional information is accessible\r\n   * through NavParams.\r\n   *\r\n   * @param component The component to push onto the navigation stack.\r\n   * @param componentProps Any properties of the component.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  push(component, componentProps, opts, done) {\r\n    return this.queueTrns({\r\n      insertStart: -1,\r\n      insertViews: [{ component, componentProps }],\r\n      opts\r\n    }, done);\r\n  }\r\n  /**\r\n   * Inserts a component into the navigation stack at the specified index.\r\n   * This is useful to add a component at any point in the navigation stack.\r\n   *\r\n   * @param insertIndex The index to insert the component at in the stack.\r\n   * @param component The component to insert into the navigation stack.\r\n   * @param componentProps Any properties of the component.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  insert(insertIndex, component, componentProps, opts, done) {\r\n    return this.queueTrns({\r\n      insertStart: insertIndex,\r\n      insertViews: [{ component, componentProps }],\r\n      opts\r\n    }, done);\r\n  }\r\n  /**\r\n   * Inserts an array of components into the navigation stack at the specified index.\r\n   * The last component in the array will become instantiated as a view, and animate\r\n   * in to become the active view.\r\n   *\r\n   * @param insertIndex The index to insert the components at in the stack.\r\n   * @param insertComponents The components to insert into the navigation stack.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  insertPages(insertIndex, insertComponents, opts, done) {\r\n    return this.queueTrns({\r\n      insertStart: insertIndex,\r\n      insertViews: insertComponents,\r\n      opts\r\n    }, done);\r\n  }\r\n  /**\r\n   * Pop a component off of the navigation stack. Navigates back from the current\r\n   * component.\r\n   *\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  pop(opts, done) {\r\n    return this.queueTrns({\r\n      removeStart: -1,\r\n      removeCount: 1,\r\n      opts\r\n    }, done);\r\n  }\r\n  /**\r\n   * Pop to a specific index in the navigation stack.\r\n   *\r\n   * @param indexOrViewCtrl The index or view controller to pop to.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  popTo(indexOrViewCtrl, opts, done) {\r\n    const tiConfig = {\r\n      removeStart: -1,\r\n      removeCount: -1,\r\n      opts\r\n    };\r\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\r\n      tiConfig.removeView = indexOrViewCtrl;\r\n      tiConfig.removeStart = 1;\r\n    }\r\n    else if (typeof indexOrViewCtrl === 'number') {\r\n      tiConfig.removeStart = indexOrViewCtrl + 1;\r\n    }\r\n    return this.queueTrns(tiConfig, done);\r\n  }\r\n  /**\r\n   * Navigate back to the root of the stack, no matter how far back that is.\r\n   *\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  popToRoot(opts, done) {\r\n    return this.queueTrns({\r\n      removeStart: 1,\r\n      removeCount: -1,\r\n      opts\r\n    }, done);\r\n  }\r\n  /**\r\n   * Removes a component from the navigation stack at the specified index.\r\n   *\r\n   * @param startIndex The number to begin removal at.\r\n   * @param removeCount The number of components to remove.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  removeIndex(startIndex, removeCount = 1, opts, done) {\r\n    return this.queueTrns({\r\n      removeStart: startIndex,\r\n      removeCount,\r\n      opts\r\n    }, done);\r\n  }\r\n  /**\r\n   * Set the root for the current navigation stack to a component.\r\n   *\r\n   * @param component The component to set as the root of the navigation stack.\r\n   * @param componentProps Any properties of the component.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  setRoot(component, componentProps, opts, done) {\r\n    return this.setPages([{ component, componentProps }], opts, done);\r\n  }\r\n  /**\r\n   * Set the views of the current navigation stack and navigate to the last view.\r\n   * By default animations are disabled, but they can be enabled by passing options\r\n   * to the navigation controller. Navigation parameters can also be passed to the\r\n   * individual pages in the array.\r\n   *\r\n   * @param views The list of views to set as the navigation stack.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  setPages(views, opts, done) {\r\n    if (opts == null) {\r\n      opts = {};\r\n    }\r\n    // if animation wasn't set to true then default it to NOT animate\r\n    if (opts.animated !== true) {\r\n      opts.animated = false;\r\n    }\r\n    return this.queueTrns({\r\n      insertStart: 0,\r\n      insertViews: views,\r\n      removeStart: 0,\r\n      removeCount: -1,\r\n      opts\r\n    }, done);\r\n  }\r\n  /** @internal */\r\n  setRouteId(id, params, direction, animation) {\r\n    const active = this.getActiveSync();\r\n    if (matches(active, id, params)) {\r\n      return Promise.resolve({\r\n        changed: false,\r\n        element: active.element\r\n      });\r\n    }\r\n    let resolve;\r\n    const promise = new Promise(r => (resolve = r));\r\n    let finish;\r\n    const commonOpts = {\r\n      updateURL: false,\r\n      viewIsReady: enteringEl => {\r\n        let mark;\r\n        const p = new Promise(r => (mark = r));\r\n        resolve({\r\n          changed: true,\r\n          element: enteringEl,\r\n          markVisible: async () => {\r\n            mark();\r\n            await finish;\r\n          }\r\n        });\r\n        return p;\r\n      }\r\n    };\r\n    if (direction === 'root') {\r\n      finish = this.setRoot(id, params, commonOpts);\r\n    }\r\n    else {\r\n      const viewController = this.views.find(v => matches(v, id, params));\r\n      if (viewController) {\r\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\r\n      }\r\n      else if (direction === 'forward') {\r\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\r\n      }\r\n      else if (direction === 'back') {\r\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\r\n      }\r\n    }\r\n    return promise;\r\n  }\r\n  /** @internal */\r\n  async getRouteId() {\r\n    const active = this.getActiveSync();\r\n    return active\r\n      ? {\r\n        id: active.element.tagName,\r\n        params: active.params,\r\n        element: active.element\r\n      }\r\n      : undefined;\r\n  }\r\n  /**\r\n   * Get the active view.\r\n   */\r\n  getActive() {\r\n    return Promise.resolve(this.getActiveSync());\r\n  }\r\n  /**\r\n   * Get the view at the specified index.\r\n   *\r\n   * @param index The index of the view.\r\n   */\r\n  getByIndex(index) {\r\n    return Promise.resolve(this.views[index]);\r\n  }\r\n  /**\r\n   * Returns `true` if the current view can go back.\r\n   *\r\n   * @param view The view to check.\r\n   */\r\n  canGoBack(view) {\r\n    return Promise.resolve(this.canGoBackSync(view));\r\n  }\r\n  /**\r\n   * Get the previous view.\r\n   *\r\n   * @param view The view to get.\r\n   */\r\n  getPrevious(view) {\r\n    return Promise.resolve(this.getPreviousSync(view));\r\n  }\r\n  getLength() {\r\n    return this.views.length;\r\n  }\r\n  getActiveSync() {\r\n    return this.views[this.views.length - 1];\r\n  }\r\n  canGoBackSync(view = this.getActiveSync()) {\r\n    return !!(view && this.getPreviousSync(view));\r\n  }\r\n  getPreviousSync(view = this.getActiveSync()) {\r\n    if (!view) {\r\n      return undefined;\r\n    }\r\n    const views = this.views;\r\n    const index = views.indexOf(view);\r\n    return index > 0 ? views[index - 1] : undefined;\r\n  }\r\n  // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\r\n  // 1. _nextTrns(): consumes the next transition in the queue\r\n  // 2. _viewInit(): initializes enteringView if required\r\n  // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\r\n  // 4. _postViewInit(): add/remove the views from the navigation stack\r\n  // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\r\n  // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\r\n  // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\r\n  // 8. _transitionFinish(): called once the transition finishes\r\n  // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\r\n  async queueTrns(ti, done) {\r\n    if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\r\n      return Promise.resolve(false);\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      ti.resolve = resolve;\r\n      ti.reject = reject;\r\n    });\r\n    ti.done = done;\r\n    /**\r\n     * If using router, check to see if navigation hooks\r\n     * will allow us to perform this transition. This\r\n     * is required in order for hooks to work with\r\n     * the ion-back-button or swipe to go back.\r\n     */\r\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\r\n      const router = document.querySelector('ion-router');\r\n      if (router) {\r\n        const canTransition = await router.canTransition();\r\n        if (canTransition === false) {\r\n          return Promise.resolve(false);\r\n        }\r\n        else if (typeof canTransition === 'string') {\r\n          router.push(canTransition, ti.opts.direction || 'back');\r\n          return Promise.resolve(false);\r\n        }\r\n      }\r\n    }\r\n    // Normalize empty\r\n    if (ti.insertViews && ti.insertViews.length === 0) {\r\n      ti.insertViews = undefined;\r\n    }\r\n    // Enqueue transition instruction\r\n    this.transInstr.push(ti);\r\n    // if there isn't a transition already happening\r\n    // then this will kick off this transition\r\n    this.nextTrns();\r\n    return promise;\r\n  }\r\n  success(result, ti) {\r\n    if (this.destroyed) {\r\n      this.fireError('nav controller was destroyed', ti);\r\n      return;\r\n    }\r\n    if (ti.done) {\r\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\r\n    }\r\n    ti.resolve(result.hasCompleted);\r\n    if (ti.opts.updateURL !== false && this.useRouter) {\r\n      const router = document.querySelector('ion-router');\r\n      if (router) {\r\n        const direction = result.direction === 'back' ? 'back' : 'forward';\r\n        router.navChanged(direction);\r\n      }\r\n    }\r\n  }\r\n  failed(rejectReason, ti) {\r\n    if (this.destroyed) {\r\n      this.fireError('nav controller was destroyed', ti);\r\n      return;\r\n    }\r\n    this.transInstr.length = 0;\r\n    this.fireError(rejectReason, ti);\r\n  }\r\n  fireError(rejectReason, ti) {\r\n    if (ti.done) {\r\n      ti.done(false, false, rejectReason);\r\n    }\r\n    if (ti.reject && !this.destroyed) {\r\n      ti.reject(rejectReason);\r\n    }\r\n    else {\r\n      ti.resolve(false);\r\n    }\r\n  }\r\n  nextTrns() {\r\n    // this is the framework's bread 'n butta function\r\n    // only one transition is allowed at any given time\r\n    if (this.isTransitioning) {\r\n      return false;\r\n    }\r\n    // there is no transition happening right now\r\n    // get the next instruction\r\n    const ti = this.transInstr.shift();\r\n    if (!ti) {\r\n      return false;\r\n    }\r\n    this.runTransition(ti);\r\n    return true;\r\n  }\r\n  async runTransition(ti) {\r\n    try {\r\n      // set that this nav is actively transitioning\r\n      this.ionNavWillChange.emit();\r\n      this.isTransitioning = true;\r\n      this.prepareTI(ti);\r\n      const leavingView = this.getActiveSync();\r\n      const enteringView = this.getEnteringView(ti, leavingView);\r\n      if (!leavingView && !enteringView) {\r\n        throw new Error('no views in the stack to be removed');\r\n      }\r\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\r\n        await enteringView.init(this.el);\r\n      }\r\n      this.postViewInit(enteringView, leavingView, ti);\r\n      // Needs transition?\r\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\r\n        enteringView !== leavingView;\r\n      if (requiresTransition && ti.opts && leavingView) {\r\n        const isBackDirection = ti.opts.direction === 'back';\r\n        /**\r\n         * If heading back, use the entering page's animation\r\n         * unless otherwise specified by the developer.\r\n         */\r\n        if (isBackDirection) {\r\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\r\n        }\r\n        leavingView.animationBuilder = ti.opts.animationBuilder;\r\n      }\r\n      const result = requiresTransition\r\n        ? await this.transition(enteringView, leavingView, ti)\r\n        : {\r\n          // transition is not required, so we are already done!\r\n          // they're inserting/removing the views somewhere in the middle or\r\n          // beginning, so visually nothing needs to animate/transition\r\n          // resolve immediately because there's no animation that's happening\r\n          hasCompleted: true,\r\n          requiresTransition: false\r\n        };\r\n      this.success(result, ti);\r\n      this.ionNavDidChange.emit();\r\n    }\r\n    catch (rejectReason) {\r\n      this.failed(rejectReason, ti);\r\n    }\r\n    this.isTransitioning = false;\r\n    this.nextTrns();\r\n  }\r\n  prepareTI(ti) {\r\n    const viewsLength = this.views.length;\r\n    ti.opts = ti.opts || {};\r\n    if (ti.opts.delegate === undefined) {\r\n      ti.opts.delegate = this.delegate;\r\n    }\r\n    if (ti.removeView !== undefined) {\r\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\r\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\r\n      const index = this.views.indexOf(ti.removeView);\r\n      if (index < 0) {\r\n        throw new Error('removeView was not found');\r\n      }\r\n      ti.removeStart += index;\r\n    }\r\n    if (ti.removeStart !== undefined) {\r\n      if (ti.removeStart < 0) {\r\n        ti.removeStart = viewsLength - 1;\r\n      }\r\n      if (ti.removeCount < 0) {\r\n        ti.removeCount = viewsLength - ti.removeStart;\r\n      }\r\n      ti.leavingRequiresTransition =\r\n        ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\r\n    }\r\n    if (ti.insertViews) {\r\n      // allow -1 to be passed in to auto push it on the end\r\n      // and clean up the index if it's larger then the size of the stack\r\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\r\n        ti.insertStart = viewsLength;\r\n      }\r\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\r\n    }\r\n    const insertViews = ti.insertViews;\r\n    if (!insertViews) {\r\n      return;\r\n    }\r\n    assert(insertViews.length > 0, 'length can not be zero');\r\n    const viewControllers = convertToViews(insertViews);\r\n    if (viewControllers.length === 0) {\r\n      throw new Error('invalid views to insert');\r\n    }\r\n    // Check all the inserted view are correct\r\n    for (const view of viewControllers) {\r\n      view.delegate = ti.opts.delegate;\r\n      const nav = view.nav;\r\n      if (nav && nav !== this) {\r\n        throw new Error('inserted view was already inserted');\r\n      }\r\n      if (view.state === VIEW_STATE_DESTROYED) {\r\n        throw new Error('inserted view was already destroyed');\r\n      }\r\n    }\r\n    ti.insertViews = viewControllers;\r\n  }\r\n  getEnteringView(ti, leavingView) {\r\n    const insertViews = ti.insertViews;\r\n    if (insertViews !== undefined) {\r\n      // grab the very last view of the views to be inserted\r\n      // and initialize it as the new entering view\r\n      return insertViews[insertViews.length - 1];\r\n    }\r\n    const removeStart = ti.removeStart;\r\n    if (removeStart !== undefined) {\r\n      const views = this.views;\r\n      const removeEnd = removeStart + ti.removeCount;\r\n      for (let i = views.length - 1; i >= 0; i--) {\r\n        const view = views[i];\r\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\r\n          return view;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  postViewInit(enteringView, leavingView, ti) {\r\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\r\n    assert(ti.resolve, 'resolve must be valid');\r\n    assert(ti.reject, 'reject must be valid');\r\n    const opts = ti.opts;\r\n    const insertViews = ti.insertViews;\r\n    const removeStart = ti.removeStart;\r\n    const removeCount = ti.removeCount;\r\n    let destroyQueue;\r\n    // there are views to remove\r\n    if (removeStart !== undefined && removeCount !== undefined) {\r\n      assert(removeStart >= 0, 'removeStart can not be negative');\r\n      assert(removeCount >= 0, 'removeCount can not be negative');\r\n      destroyQueue = [];\r\n      for (let i = 0; i < removeCount; i++) {\r\n        const view = this.views[i + removeStart];\r\n        if (view && view !== enteringView && view !== leavingView) {\r\n          destroyQueue.push(view);\r\n        }\r\n      }\r\n      // default the direction to \"back\"\r\n      opts.direction = opts.direction || 'back';\r\n    }\r\n    const finalBalance = this.views.length +\r\n      (insertViews !== undefined ? insertViews.length : 0) -\r\n      (removeCount !== undefined ? removeCount : 0);\r\n    assert(finalBalance >= 0, 'final balance can not be negative');\r\n    if (finalBalance === 0) {\r\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\r\n      throw new Error('navigation stack needs at least one root page');\r\n    }\r\n    // At this point the transition can not be rejected, any throw should be an error\r\n    // there are views to insert\r\n    if (insertViews) {\r\n      // add the views to the\r\n      let insertIndex = ti.insertStart;\r\n      for (const view of insertViews) {\r\n        this.insertViewAt(view, insertIndex);\r\n        insertIndex++;\r\n      }\r\n      if (ti.enteringRequiresTransition) {\r\n        // default to forward if not already set\r\n        opts.direction = opts.direction || 'forward';\r\n      }\r\n    }\r\n    // if the views to be removed are in the beginning or middle\r\n    // and there is not a view that needs to visually transition out\r\n    // then just destroy them and don't transition anything\r\n    // batch all of lifecycles together\r\n    // let's make sure, callbacks are zoned\r\n    if (destroyQueue && destroyQueue.length > 0) {\r\n      for (const view of destroyQueue) {\r\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\r\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\r\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\r\n      }\r\n      // once all lifecycle events has been delivered, we can safely detroy the views\r\n      for (const view of destroyQueue) {\r\n        this.destroyView(view);\r\n      }\r\n    }\r\n  }\r\n  async transition(enteringView, leavingView, ti) {\r\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\r\n    // or if it is a portal (modal, actionsheet, etc.)\r\n    const opts = ti.opts;\r\n    const progressCallback = opts.progressAnimation\r\n      ? (ani) => this.sbAni = ani\r\n      : undefined;\r\n    const mode = getIonMode(this);\r\n    const enteringEl = enteringView.element;\r\n    const leavingEl = leavingView && leavingView.element;\r\n    const animationOpts = Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\r\n      leavingEl }, opts);\r\n    const { hasCompleted } = await transition(animationOpts);\r\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\r\n  }\r\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\r\n    const cleanupView = hasCompleted ? enteringView : leavingView;\r\n    if (cleanupView) {\r\n      this.cleanup(cleanupView);\r\n    }\r\n    return {\r\n      hasCompleted,\r\n      requiresTransition: true,\r\n      enteringView,\r\n      leavingView,\r\n      direction: opts.direction\r\n    };\r\n  }\r\n  insertViewAt(view, index) {\r\n    const views = this.views;\r\n    const existingIndex = views.indexOf(view);\r\n    if (existingIndex > -1) {\r\n      // this view is already in the stack!!\r\n      // move it to its new location\r\n      assert(view.nav === this, 'view is not part of the nav');\r\n      views.splice(index, 0, views.splice(existingIndex, 1)[0]);\r\n    }\r\n    else {\r\n      assert(!view.nav, 'nav is used');\r\n      // this is a new view to add to the stack\r\n      // create the new entering view\r\n      view.nav = this;\r\n      // insert the entering view into the correct index in the stack\r\n      views.splice(index, 0, view);\r\n    }\r\n  }\r\n  removeView(view) {\r\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\r\n    const views = this.views;\r\n    const index = views.indexOf(view);\r\n    assert(index > -1, 'view must be part of the stack');\r\n    if (index >= 0) {\r\n      views.splice(index, 1);\r\n    }\r\n  }\r\n  destroyView(view) {\r\n    view._destroy();\r\n    this.removeView(view);\r\n  }\r\n  /**\r\n   * DOM WRITE\r\n   */\r\n  cleanup(activeView) {\r\n    // ok, cleanup time!! Destroy all of the views that are\r\n    // INACTIVE and come after the active view\r\n    // only do this if the views exist, though\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    const views = this.views;\r\n    const activeViewIndex = views.indexOf(activeView);\r\n    for (let i = views.length - 1; i >= 0; i--) {\r\n      const view = views[i];\r\n      /**\r\n       * When inserting multiple views via insertPages\r\n       * the last page will be transitioned to, but the\r\n       * others will not be. As a result, a DOM element\r\n       * will only be created for the last page inserted.\r\n       * As a result, it is possible to have views in the\r\n       * stack that do not have `view.element` yet.\r\n       */\r\n      const element = view.element;\r\n      if (element) {\r\n        if (i > activeViewIndex) {\r\n          // this view comes after the active view\r\n          // let's unload it\r\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\r\n          this.destroyView(view);\r\n        }\r\n        else if (i < activeViewIndex) {\r\n          // this view comes before the active view\r\n          // and it is not a portal then ensure it is hidden\r\n          setPageHidden(element, true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  canStart() {\r\n    return (!!this.swipeGesture &&\r\n      !this.isTransitioning &&\r\n      this.transInstr.length === 0 &&\r\n      this.animationEnabled &&\r\n      this.canGoBackSync());\r\n  }\r\n  onStart() {\r\n    this.queueTrns({\r\n      removeStart: -1,\r\n      removeCount: 1,\r\n      opts: {\r\n        direction: 'back',\r\n        progressAnimation: true\r\n      }\r\n    }, undefined);\r\n  }\r\n  onMove(stepValue) {\r\n    if (this.sbAni) {\r\n      this.sbAni.progressStep(stepValue);\r\n    }\r\n  }\r\n  onEnd(shouldComplete, stepValue, dur) {\r\n    if (this.sbAni) {\r\n      this.animationEnabled = false;\r\n      this.sbAni.onFinish(() => {\r\n        this.animationEnabled = true;\r\n      }, { oneTimeCallback: true });\r\n      // Account for rounding errors in JS\r\n      let newStepValue = (shouldComplete) ? -0.001 : 0.001;\r\n      /**\r\n       * Animation will be reversed here, so need to\r\n       * reverse the easing curve as well\r\n       *\r\n       * Additionally, we need to account for the time relative\r\n       * to the new easing curve, as `stepValue` is going to be given\r\n       * in terms of a linear curve.\r\n       */\r\n      if (!shouldComplete) {\r\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\r\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\r\n      }\r\n      else {\r\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\r\n      }\r\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\r\n    }\r\n  }\r\n  render() {\r\n    return (h(\"slot\", null));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"swipeGesture\": [\"swipeGestureChanged\"],\r\n    \"root\": [\"rootChanged\"]\r\n  }; }\r\n};\r\nNav.style = navCss;\r\n\r\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\r\n  const nav = el.closest('ion-nav');\r\n  if (nav) {\r\n    if (routerDirection === 'forward') {\r\n      if (component !== undefined) {\r\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\r\n      }\r\n    }\r\n    else if (routerDirection === 'root') {\r\n      if (component !== undefined) {\r\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\r\n      }\r\n    }\r\n    else if (routerDirection === 'back') {\r\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\r\n    }\r\n  }\r\n  return Promise.resolve(false);\r\n};\r\n\r\nconst NavLink = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * The transition direction when navigating to another page.\r\n     */\r\n    this.routerDirection = 'forward';\r\n    this.onClick = () => {\r\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\r\n    };\r\n  }\r\n  render() {\r\n    return (h(Host, { onClick: this.onClick }));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\n\r\nexport { Nav as ion_nav, NavLink as ion_nav_link };\r\n"]}